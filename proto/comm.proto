syntax = "proto3";

package comm;

option go_package = "src/proto/comm";

service CommService {
  rpc Ping (PingRequest) returns (PingResponse);
  rpc Stop (PingRequest) returns (PingResponse);
  rpc RequestValue (RequestValueRequest) returns (RequestValueResponse);
  rpc SetValue (SetValueRequest) returns (SetValueResponse);

  // Raft
  rpc AppendEntries (AppendEntriesRequest) returns (AppendEntriesResponse);
}

//  Basic
message PingRequest {}

message PingResponse {
  int32 code = 1;
  string message = 2;
}

message RequestValueRequest {
  string key = 1;
}

message RequestValueResponse {
  int32 code = 1;
  string value = 2;
}

message SetValueRequest {
  string key = 1;
  string value = 2;
}

message SetValueResponse {
  int32 code = 1;
  string message = 2;
}

// Raft
message Entry {
  int32 term = 1;
  string key = 2;
  string value = 3;
}

message AppendEntriesRequest {
  int32 term = 1;
  int32 leaderId = 2;
  int32 prevLogIndex = 3;
  int32 prevLogTerm = 4;
  repeated Entry entries = 5;
  int32 leaderCommit = 6;
}

message AppendEntriesResponse {
  int32 term = 1;
  bool success = 2;
}

message RequestVoteRequest {
  int32 term = 1;
  int32 candidateId = 2;
  int32 lastLogIndex = 3;
  int32 lastLogTerm = 4;
}

message RequestVoteResponse {
  int32 term = 1;
  bool voteGranted = 2;
}